CREATE DATABASE Ecommerce;
USE Ecommerce;

-- CLIENTE
CREATE TABLE CLIENTE(
	ID_CLIENTE INT auto_increment PRIMARY KEY,
    NOME VARCHAR(50),
    ENDERECO VARCHAR(200),
	CPF CHAR (11),
    CNPJ VARCHAR(18),
    CONSTRAINT CHECK_PJ_OR_PF CHECK (CPF IS NOT NULL OR CNPJ IS NOT NULL), -- Cliente PJ ou PF, mas não ambos
    CONSTRAINT UNIQUE_CPF_CLIENTE UNIQUE (CPF),
    CONSTRAINT UNIQUE_CNPJ_CLIENTE UNIQUE (CNPJ)
);

-- FORMA DE PAGAMENTO
CREATE TABLE FORMA_PAGAMENTO(
	ID_FORMA_PAGAMENTO INT auto_increment PRIMARY KEY,
    CLIENTE_ID INT,
    CARTAO VARCHAR(45),
    BANDEIRA VARCHAR(45),
    NUMERO VARCHAR(45),
    CONSTRAINT FK_FORMA_PAGAMENTO_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE(ID_CLIENTE)
);

-- ENTREGA
CREATE TABLE ENTREGA(
	ID_ENTREGA INT auto_increment PRIMARY KEY,
    STATUS_ENTREGA BOOL,
    CODIGO_RASTREIO VARCHAR(50),
    DATA_ENTREGA DATE
);

-- PEDIDO
CREATE TABLE PEDIDO(
	ID_PEDIDO INT auto_increment PRIMARY KEY,
    STATUS_PEDIDO BOOL DEFAULT FALSE,
    FRETE FLOAT,
    DESCRICAO VARCHAR(50),
    ENTREGA_ID INT,
    CONSTRAINT FK_PEDIDO_ENTREGA FOREIGN KEY (ENTREGA_ID) REFERENCES ENTREGA(ID_ENTREGA)
);

-- ESTOQUE
CREATE TABLE ESTOQUE(
	ID_ESTOQUE INT auto_increment PRIMARY KEY,
    LOCAL VARCHAR(45)
);

-- PRODUTOS EM ESTOQUE
CREATE TABLE ESTOQUE_PRODUTO(
	ID_PRODUTO INT PRIMARY KEY,
    ID_ESTOQUE INT,
    QUANTIDADE FLOAT,
    CONSTRAINT FK_ESTOQUE_PRODUTO_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO),
    CONSTRAINT FK_ESTOQUE_PRODUTO_ESTOQUE FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE(ID_ESTOQUE)
);

-- FORNECEDOR PRINCIPAL
CREATE TABLE FORNECEDOR(
	ID_FORNECEDOR INT auto_increment PRIMARY KEY,
    RAZAO_SOCIAL VARCHAR(45),
    CPF CHAR (11) NOT NULL,
    CNPJ VARCHAR(18),
    CONSTRAINT UNIQUE_CPF_FORNECEDOR UNIQUE (CPF),
    CONSTRAINT UNIQUE_CNPJ_FORNECEDOR UNIQUE (CNPJ)
);

-- FORNECEDOR TERCEIRO
CREATE TABLE TERCEIRO(
	ID_TERCEIRO INT auto_increment PRIMARY KEY,
	RAZAO_SOCIAL VARCHAR(45),
    LOCALIZACAO VARCHAR(45),
    CPF CHAR (11) NOT NULL,
    CNPJ VARCHAR(18),
    CONSTRAINT UNIQUE_CPF_TERCEIRO UNIQUE (CPF),
    CONSTRAINT UNIQUE_CNPJ_TERCEIRO UNIQUE (CNPJ)
);

-- PEDIDO DE PRODUTO PARA FORNECEDOR PRINCIPAL
CREATE TABLE PEDIDO_FORNECEDOR(
	ID_COMPRA_FORNECEDOR INT,
    ID_FORNECEDOR INT,
    QUANTIDADE FLOAT DEFAULT 1,
    CONSTRAINT FK_PEDIDO_FORNECEDOR_COMPRA FOREIGN KEY (ID_COMPRA_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR),
    CONSTRAINT FK_PEDIDO_FORNECEDOR_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR) REFERENCES PEDIDO(ID_PEDIDO)
);

-- PRODUTOS EM ESTOQUE FORNECEDOR PRINCIPAL (VERIFICA SE O FORNECEDOR TEM O PRODUTO QUE O CLIENTE DESEJA)
CREATE TABLE ESTOQUE_FORNECEDOR(
	ID_ESTOQUE_FORNECEDOR INT,
    ID_PRODUTO INT,
    CONSTRAINT FK_ESTOQUE_FORNECEDOR_ESTOQUE FOREIGN KEY (ID_ESTOQUE_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR),
    CONSTRAINT FK_ESTOQUE_FORNECEDOR_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO)
);

-- PRODUTOS EM ESTOQUE FORNECEDOR TERCEIRO (VERIFICA SE O FORNECEDOR TEM O PRODUTO QUE O CLIENTE DESEJA)
CREATE TABLE ESTOQUE_TERCEIRO(
	ID_PRODUTO INT,
    ID_FORNECEDOR INT,
    CONSTRAINT FK_ESTOQUE_TERCEIRO_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO),
    CONSTRAINT FK_ESTOQUE_TERCEIRO_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR) REFERENCES TERCEIRO(ID_TERCEIRO)
);




-- Inserir dados de CLIENTE (exemplo de PF)
INSERT INTO CLIENTE (NOME, ENDERECO, CPF)
VALUES ('João Silva', 'Rua das Flores, 123', '12345678901');

-- Inserir dados de CLIENTE (exemplo de PJ)
INSERT INTO CLIENTE (NOME, ENDERECO, CNPJ)
VALUES ('Empresa ABC', 'Avenida Principal, 456', '12345678901234');

-- Inserir formas de pagamento para um cliente
INSERT INTO FORMA_PAGAMENTO (CLIENTE_ID, CARTAO, BANDEIRA, NUMERO)
VALUES
    (1, '1234 5678 1234 5678', 'Visa', '1234567890123456'),
    (2, '9876 5432 9876 5432', 'MasterCard', '9876543210987654');

-- Inserir dados de ENTREGA
INSERT INTO ENTREGA (STATUS_ENTREGA, CODIGO_RASTREIO, DATA_ENTREGA)
VALUES (1, 'RAST123456', '2023-08-25');

-- Inserir dados de PEDIDO
INSERT INTO PEDIDO (STATUS_PEDIDO, FRETE, DESCRICAO, ENTREGA_ID)
VALUES (TRUE, 20.50, 'Pedido 1', 1);

-- Inserir dados de ESTOQUE
INSERT INTO ESTOQUE (LOCAL)
VALUES ('Depósito 1');

-- Inserir produtos no estoque
INSERT INTO ESTOQUE_PRODUTO (ID_PRODUTO, ID_ESTOQUE, QUANTIDADE)
VALUES (1, 1, 100),
       (2, 1, 50);

-- Inserir dados de FORNECEDOR PRINCIPAL
INSERT INTO FORNECEDOR (RAZAO_SOCIAL, CPF, CNPJ)
VALUES ('Fornecedor A', '12345678901', '12345678901234');

-- Inserir dados de FORNECEDOR TERCEIRO
INSERT INTO TERCEIRO (RAZAO_SOCIAL, LOCALIZACAO, CPF, CNPJ)
VALUES ('Fornecedor B', 'Local B', '98765432101', '98765432101234');

-- Inserir dados de PEDIDO FORNECEDOR
INSERT INTO PEDIDO_FORNECEDOR (ID_COMPRA_FORNECEDOR, ID_FORNECEDOR, QUANTIDADE)
VALUES (1, 1, 10),
       (2, 2, 15);

-- Inserir produtos no estoque do fornecedor principal
INSERT INTO ESTOQUE_FORNECEDOR (ID_ESTOQUE_FORNECEDOR, ID_PRODUTO)
VALUES (1, 1),
       (1, 2);

-- Inserir produtos no estoque do fornecedor terceiro
INSERT INTO ESTOQUE_TERCEIRO (ID_PRODUTO, ID_FORNECEDOR)
VALUES (1, 2),
       (2, 2);




--Quantos pedidos foram feitos por cada cliente?
SELECT c.NOME AS CLIENTE, COUNT(p.ID_PEDIDO) AS TOTAL_PEDIDOS
FROM CLIENTE c
LEFT JOIN PEDIDO p ON c.ID_CLIENTE = p.ENTREGA_ID
GROUP BY c.NOME;


--Algum vendedor também é fornecedor?
SELECT DISTINCT 'Vendedor' AS TIPO, NOME
FROM CLIENTE
WHERE CPF IS NOT NULL
UNION
SELECT DISTINCT 'Fornecedor' AS TIPO, RAZAO_SOCIAL AS NOME
FROM FORNECEDOR;

--Relação de produtos fornecedores e estoques:
SELECT fp.ID_PRODUTO, f.RAZAO_SOCIAL AS FORNECEDOR, e.LOCAL AS ESTOQUE
FROM ESTOQUE_FORNECEDOR fp
INNER JOIN FORNECEDOR f ON fp.ID_ESTOQUE_FORNECEDOR = f.ID_FORNECEDOR
INNER JOIN ESTOQUE e ON fp.ID_ESTOQUE_FORNECEDOR = e.ID_ESTOQUE;


--Relação de nomes dos fornecedores e nomes dos produtos:
SELECT f.RAZAO_SOCIAL AS FORNECEDOR, p.DESCRICAO AS PRODUTO
FROM ESTOQUE_FORNECEDOR ef
INNER JOIN FORNECEDOR f ON ef.ID_ESTOQUE_FORNECEDOR = f.ID_FORNECEDOR
INNER JOIN PRODUTO p ON ef.ID_PRODUTO = p.ID_PRODUTO;
